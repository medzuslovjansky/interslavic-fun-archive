{"version":3,"file":"assets/js/4de343fa.02a873ef.js","mappings":"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","sources":["webpack://interslavic-fun/./docs/resources/keyboards.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {};\nexport const contentTitle = 'Keyboards';\nexport const metadata = {\n  \"unversionedId\": \"resources/keyboards\",\n  \"id\": \"resources/keyboards\",\n  \"title\": \"Keyboards\",\n  \"description\": \"Windows \\\\\",\n  \"source\": \"@site/docs/resources/keyboards.md\",\n  \"sourceDirName\": \"resources\",\n  \"slug\": \"/resources/keyboards\",\n  \"permalink\": \"/bg/resources/keyboards\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/medzuslovjansky/interslavic.fun/edit/main/docs/resources/keyboards.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"resourcesSidebar\",\n  \"previous\": {\n    \"title\": \"Resources\",\n    \"permalink\": \"/bg/resources/\"\n  }\n};\nexport const assets = {\n\n};\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [{\n  \"value\": \"Windows\",\n  \"id\": \"windows\",\n  \"level\": 3\n}, {\n  \"value\": \"Mac\",\n  \"id\": \"mac\",\n  \"level\": 3\n}, {\n  \"value\": \"Linux\",\n  \"id\": \"linux\",\n  \"level\": 3\n}, {\n  \"value\": \"Android\",\n  \"id\": \"android\",\n  \"level\": 3\n}, {\n  \"value\": \"Other platforms\",\n  \"id\": \"other-platforms\",\n  \"level\": 3\n}];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {CustomBeforeSection, CustomAfterSection} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!CustomBeforeSection) _missingMdxReference(\"CustomBeforeSection\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"keyboards\",\n      children: \"Keyboards\"\n    }), \"\\n\", _jsx(CustomBeforeSection, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"windows\",\n      children: \"Windows\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://tyflonet.com/siciliano/klaviatury\",\n        children: \"http://tyflonet.com/siciliano/klaviatury\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"mac\",\n      children: \"Mac\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"TODO: add links\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"linux\",\n      children: \"Linux\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Extended MS Latin on international Latin keyboards (such as hrvatska in the unicodeus variant).\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Full Cyrillic keyboard is on a standard Ukrainian keyboard.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"android\",\n      children: \"Android\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://usachov.eu/g\",\n        children: \"http://usachov.eu/g\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"other-platforms\",\n      children: \"Other platforms\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If there is no keyboard for your platform, you can try using some built-in keyboard layouts:\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For the \", _jsx(_components.strong, {\n        children: \"Interslavic Latin\"\n      }), \" alphabet:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Czech (standard, partially etymological)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Croatian (exempted)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Serbia (exonerated)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Slovenian (exempted)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For the \", _jsx(_components.strong, {\n        children: \"Interslavic Cyrillic\"\n      }), \" alphabet:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Serbian (exempted, without \\\"Ы\\\")\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","Object","assign","h1","h3","p","a","ul","li","strong","components","CustomBeforeSection","CustomAfterSection","_missingMdxReference","children","id","href","wrapper","MDXLayout","component","Error","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}